#!/usr/bin/env python3
import os
import sys
from langchain_community.vectorstores import FAISS
from langchain_community.embeddings import SentenceTransformerEmbeddings

def main():
    # –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è
    DB_PATH = os.path.expanduser("~/secure_rag/vector_db")
    
    print("\n" + "="*50)
    print("üîç –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –≤–µ–∫—Ç–æ—Ä–Ω–æ–π –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö")
    print("="*50)

    # 1. –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏—è —Ñ–∞–π–ª–æ–≤ –±–∞–∑—ã FAISS
    if not os.path.exists(f"{DB_PATH}/index.faiss"):
        print("\n‚ùå –û—à–∏–±–∫–∞: —Ñ–∞–π–ª—ã –±–∞–∑—ã –Ω–µ –Ω–∞–π–¥–µ–Ω—ã!")
        print(f"–£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ –ø—É—Ç—å –∫–æ—Ä—Ä–µ–∫—Ç–µ–Ω: {DB_PATH}")
        print("–°–Ω–∞—á–∞–ª–∞ —Å–æ–∑–¥–∞–π—Ç–µ –±–∞–∑—É –∫–æ–º–∞–Ω–¥–æ–π:")
        print("python3 ~/secure_rag/scripts/02.create_vector_db.py")
        sys.exit(1)

    # 2. –ó–∞–≥—Ä—É–∑–∫–∞ –±–∞–∑—ã —Å —è–≤–Ω—ã–º —Ä–∞–∑—Ä–µ—à–µ–Ω–∏–µ–º
    try:
        print("\nüîÑ –ó–∞–≥—Ä—É–∑–∫–∞ –≤–µ–∫—Ç–æ—Ä–Ω–æ–π –±–∞–∑—ã...")
        # –ò–∑–º–µ–Ω–µ–Ω–æ: –£–∫–∞–∑—ã–≤–∞–µ–º —Ç–æ—á–Ω—ã–π –ª–æ–∫–∞–ª—å–Ω—ã–π –ø—É—Ç—å –∫ –º–æ–¥–µ–ª–∏ BAAI-bge-m3
        embeddings = SentenceTransformerEmbeddings(model_name="/home/user/models/embeding/BAAI-bge-m3")
        db = FAISS.load_local(
            DB_PATH,
            embeddings,
            allow_dangerous_deserialization=True  # –í–∞—à–µ —Ä–µ—à–µ–Ω–∏–µ
        )
        print(f"‚úÖ –£—Å–ø–µ—à–Ω–æ –∑–∞–≥—Ä—É–∂–µ–Ω–æ –≤–µ–∫—Ç–æ—Ä–æ–≤: {db.index.ntotal}")
    except Exception as e:
        print(f"\n‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏: {str(e)}")
        print("\n–í–æ–∑–º–æ–∂–Ω—ã–µ —Ä–µ—à–µ–Ω–∏—è:")
        print(f"1. –£–¥–∞–ª–∏—Ç–µ –∏ –ø–µ—Ä–µ—Å–æ–∑–¥–∞–π—Ç–µ –±–∞–∑—É: rm -rf {DB_PATH}")
        print(f"2. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ø—É—Ç—å –∫ –º–æ–¥–µ–ª–∏ —ç–º–±–µ–¥–¥–∏–Ω–≥–æ–≤: /home/user/models/embeding/BAAI-bge-m3")
        sys.exit(1)

    # 3. –¢–µ—Å—Ç–æ–≤—ã–µ –∑–∞–ø—Ä–æ—Å—ã
    test_queries = ["–æ—Ä–∞–Ω–∂–µ–≤—ã–π –∫–æ–Ω—å", "—Å–µ–ª–µ–¥–æ—á–Ω—ã–µ –≥–æ–ª–æ–≤—ã", "–º–∞–ª–∏–Ω–æ–≤—ã–µ –∫–æ–ø—ã—Ç–∞"]
    print("\n" + "="*50)
    print("üîé –¢–µ—Å—Ç–æ–≤—ã–µ –∑–∞–ø—Ä–æ—Å—ã –∫ –±–∞–∑–µ:")
    
    for query in test_queries:
        try:
            results = db.similarity_search(query, k=1)
            print(f"\n–ó–∞–ø—Ä–æ—Å: '{query}'")
            if results:
                doc = results[0]
                source_info = doc.metadata.get('source', 'unknown').replace(os.path.expanduser("~/secure_rag/md/"), "")
                print(f"üìÑ –ò—Å—Ç–æ—á–Ω–∏–∫: {source_info}")
                print(f"üìù –°–æ–¥–µ—Ä–∂–∞–Ω–∏–µ: {doc.page_content[:200]}...")
            else:
                print("‚ö† –ù–∏—á–µ–≥–æ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ")
        except Exception as e:
            print(f"‚ö† –û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–ø—Ä–æ—Å–µ '{query}': {str(e)}")

    print("\n" + "="*50)
    print("‚úÖ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ —É—Å–ø–µ—à–Ω–æ!")
    print("="*50)
    sys.exit(0)

if __name__ == "__main__":
    main()

